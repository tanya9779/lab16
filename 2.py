# операцию умножения пишем, как '*', "*", \*
# подключаем модуль разбора параметров командной строки
import argparse
# подключаем модуль sys
import sys


# создаём парсер и описываем все параметры командной строки, которые может
# принимать наша программа
parser = argparse.ArgumentParser(
    # краткое описание программы
    description='Консольный калькулятор'
)
# описываем позиционные параметры
parser.add_argument(
    # название поля в объекте, где будут сохранены параметры
    'values',
    # название параметров, которое будет отображено в справке
    metavar='VALUES',
    # сообщаем парсеру, что ожидаются числа с плавающей запятой
    type=float,
    # параметров будет не меньше одного
    nargs='+',
    # краткое описание параметров
    help='входные данные'
)


# описываем опцию
parser.add_argument(
    # короткое название опции
    '-a',
    # длинное название опции
    '--action',
    # название параметра, которое будет отображено в справке
    metavar='VALUE',
    # сообщаем парсеру, что ожидается строка - это по умолчанию
    # type=string,
    # парсер сохранит значение параметра, если встретит эту опцию
    action='store',
    # краткое описание опции
    help='арифметическое действие'
)
# описываем опцию
parser.add_argument(
    # короткое название опции
    '-v',
    # длинное название опции
    '--verbose',
    # парсер сохранит значение параметра, если встретит эту опцию
    action='store_true',    
    # краткое описание опции
    help='вывести подробно'
)
# вызываем функцию разбора параметров командной строки
args = parser.parse_args()

# проверяем, что хотя бы три параметра передано
if not args.action and not len(args)<3:
    # выводим сообщение об ошибке в стандартный поток вывода ошибок (stderr)
    print(
        'Должно быть указано один параметр --action и два числа',
        file=sys.stderr
    )
    # завершаем программу
    sys.exit(-1)

# фильтруем входные значения 
values=args.values

# считаем выражение 
x = values[0]
y = values[1]
z=0


if args.action=='+':
    z=x + y
elif args.action=='-':
    z=x - y
elif args.action=='"*"' or args.action=="'*'" or args.action=='\*':
    z=x * y
elif args.action=='/':
    z=x / y    
    

# выводим значения
if args.verbose:
    print (x,args.action,y,'=',z)
else:
    print (z)
